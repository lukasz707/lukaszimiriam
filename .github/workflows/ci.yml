name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd app
          npm install

      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get update && sudo apt-get install -y mysql-client
          for i in {1..10}; do
            mysql -h 127.0.0.1 -P 3306 -u root -ppassword -e "SELECT 1" && break || sleep 5
          done

      - name: Run tests
        run: |
          cd app
          npm test
      
      - name: Build Docker image
        run: docker build -t app_web:latest .

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy over SSH
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            if [ ! -d app ]; then
              git clone https://github.com/lukasz707/lukaszimiriam.git app
            fi
            cd app
            git pull
            docker-compose down || true
            docker-compose up -d --build
          EOF